import { get } from "@mindful-web/object-path";
import { defaultValue } from "@mindful-web/marko-web/utils";
import convertAdToNode from "@mindful-web/marko-web-native-x/utils/convert-ad-to-node";
import shuffle from "@cox-matthews-associates/package-global/utils/shuffle-array";

$ const { nativeX: nxConfig } = out.global;
$ const placementName = "promotion";
$ const aliases = defaultValue(input.aliases, []);
$ const blockName = "callout-cards";
$ const uri = nxConfig.getUri();
$ const placement = nxConfig.getPlacement({ name: placementName, aliases });

<marko-web-block name=blockName>
  <marko-web-element block-name=blockName name="row">
    <marko-web-element block-name=blockName name="col">
      <site-latest-podcast-block />
    </marko-web-element>
    <marko-web-native-x-fetch-elements|{ ads }| uri=uri id=placement.id>
      $ const hasAd = ads && ads.length && ads[0] && ads[0].hasCampaign;
      <if(hasAd)>
        <marko-web-element block-name=blockName name="col" modifiers=["last"]>
          <if(ads[0] && ads[0].hasCampaign)>
            $ const { node } = convertAdToNode(ads[0]);
            $ const linkText = get(node, "linkText") || "Read";
            $ const blockName = defaultValue(input.blockName, "pib-page-card");
            <if(get(node, 'company.name') === 'Diverse Jobs')>
              <theme-standard-promo-node ...convertAdToNode(ads[0]) />
            </if>
            <else-if(get(node, 'company.name') === 'Diverse Education')>
              <marko-web-block name="white-papers" attrs=input.attrs>
                <marko-web-element block-name="white-papers" name="header">
                  Sponsored
                </marko-web-element>
                <marko-web-element block-name=blockName name="inner-wrapper">
                  <div>
                    <marko-web-element block-name=blockName name="title">
                      ${node.shortName}
                    </marko-web-element>
                    <marko-web-element block-name=blockName name="description">
                      ${node.teaser}
                    </marko-web-element>

                    <marko-web-link
                      class=`btn btn-primary ${blockName}__download-btn`
                      href=node.siteContext.path
                      title=linkText
                      attrs=input.linkAttrs
                    >
                      ${linkText}
                    </marko-web-link>
                  </div>
                  <if(node.primaryImage)>
                    <marko-web-img
                      class=`${blockName}__issue-cover`
                      src=node.primaryImage.src
                      srcset=[`${node.primaryImage.src}&dpr=2 2x`]
                      alt=node.primaryImage.alt
                    />
                  </if>
                </marko-web-element>
              </marko-web-block>
            </else-if>
          </if>
        </marko-web-element>
      </if>
    </marko-web-native-x-fetch-elements>
  </marko-web-element>
</marko-web-block>
